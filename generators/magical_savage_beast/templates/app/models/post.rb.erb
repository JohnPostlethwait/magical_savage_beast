class Post < ActiveRecord::Base
  def self.per_page() 25 end

  belongs_to :forum
  belongs_to :<%= singular_name %>
  belongs_to :topic

  format_attribute :body
  before_create { |r| r.forum_id = r.topic.forum_id }
  after_create  :update_cached_fields
  after_destroy :update_cached_fields

  validates_presence_of :<%= singular_name %>_id, :body, :topic
  attr_accessible :body	

  def editable_by?(<%= singular_name %>)
    <%= singular_name %> && (<%= singular_name %>.id == <%= singular_name %>_id || <%= singular_name %>.admin? || <%= singular_name %>.moderator_of?(forum_id))
  end

  def to_xml(options = {})
    options[:except] ||= []
    options[:except] << :topic_title << :forum_name
    super
  end

  protected
    # using count isn't ideal but it gives us correct caches each time
    def update_cached_fields
      Forum.update_all ['posts_count = ?', Post.count(:id, :conditions => {:forum_id => forum_id})], ['id = ?', forum_id]
      <%= class_name %>.update_posts_count(<%= singular_name %>_id)
      topic.update_cached_post_fields(self)
    end
end
